@model _744Project.ViewModels.NetworkViewModel

@{
    ViewBag.Title = "Network";
}


<h2>Network</h2>
<script src="@Url.Content("~/Scripts/cytoscape.js")" type="text/javascript"></script>

<div class="" id="cy" style="width: 100%;
        height: 100%;
        position: absolute;
        top: 0px;
        left: 0px;">

</div>

<div>
	Html.Raw(Json.Encode(Model))
</div>




@section Scripts{

<script>
	var jsonData = @Html.Raw(Json.Encode(Model));

	var NetworkElements = {
		nodes: [],
		edges: []
	};

	function convertToCytoscape() {
		//alert("hi");
		console.log("Hello..");
		console.log(jsonData.networkEntities);
		for(var p in jsonData.networkEntities){
			console.log(p);
			console.log(jsonData.networkEntities[p].type);
			//if it is a store
			if (jsonData.networkEntities[p].type == 0) {
				NetworkElements.nodes.push({ data: { id: p , color: 'yellow', shape: 'square'} });
			}
			//if it is a relay
			else if (jsonData.networkEntities[p].type == 1) {
				NetworkElements.nodes.push({ data: { id: p, color: 'blue', shape: 'circle' } });
			}
			else {
				NetworkElements.nodes.push({ data: { id: p, color: 'red', shape: 'triangle' } });
			}
			//NetworkElements.nodes.push({ data: { id: p } });
			
		}
		console.log("===========================================================================================");
		for(var q in jsonData.connections){
			console.log(jsonData.connections[q]);
			NetworkElements.edges.push({ data: { id: jsonData.connections[q].ip1 + jsonData.connections[q].ip2, source: jsonData.connections[q].ip1, target: jsonData.connections[q].ip2 } });
		}

		return NetworkElements;
	}

	var cy = cytoscape({
		container: document.getElementById('cy'),
		style: [
			{
				selector: 'node',
				style: {
					//shape: 'data(shape)',
					shape: 'circle',
					'border-width': '5',
					//'background-color': 'red',
					'background-color': 'data(color)',
					content: 'data(id)',
					'curve-style': 'bezier'
				}
			}],
		layout: {
			name: 'breadthfirst'
		},
		elements: convertToCytoscape()
	});	

	function testData() {
		alert("here..");
		return testData;
	}
	

	function exportPositions() {//cy
		var list = [];
		var nodes = cy.nodes();
		for (var i = 0; i < nodes.length; i++) {
			var obj = {};
			obj['id'] = nodes[i].id();
			obj['pos'] = nodes[i].position();
			list.push(obj);
		}
		

		list = JSON.stringify({
			'nodePosition': list
		});

		console.log(list);

		var url = 'Network/NodePositions';
		$.ajax({
			type: 'POST',
			url: url,
			data: list,
			dataType: 'json',
			contentType: 'application/json;charset=utf-8'
		});
	}

</script>
}